Reflection 1:

"When would you want to use a remote repository rather than keeping all your work local?"

If I am a very mobile developer that uses multiple computers or has multiple collaborators, this could be a very
helfpul feature that lets me track files no matter where I am.

Reflection 2:

"Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?"

The "source of truth" might not be on GitHub. The changes I might be making on my local computer might be the ones to keep.

Reflection 3:

"Describe the differences between forks, clones, and branches. When would you use one instead of another?"

A fork is taking a copy of somone else's remote on GitHub and putting it on my own GitHub account; a clone takes a copy of files on GitHub
and puts it on my local machine or copies files on my own machine to another place on my own machine; and branches makes different versions
of a set of files on my local machine.

Reflection 4:

"What is the benefit of having a copy of the last known state of the remote stored locally?"

I believe that having a copy of the last known state of a remote branch stored locally can let us be aware of other
people's collaborations without having to incorporate them into our "source of truth" documents on the local machine. We
can decide what we want to incorporate and what to leave out.

Reflection 5:

"How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?"

If I didn't have GitHub, I would need detailed e-mails and explaining exactly what was changed. I'd need to re-save files
with new names each time we made a change to a document. It would be complicated to track down how things have changed and
where mistakes cropped up. It might be easier becaues then I wouldn't have to teach my co-workers how to use Git and GitHub.

